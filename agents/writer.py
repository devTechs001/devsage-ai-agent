import os
import logging

class WriterAgent:
    def __init__(self):
        self.logger = logging.getLogger(__name__)
    
    async def process(self, user_input: str, context: dict) -> dict:
        try:
            filepath = self._extract_filepath(user_input, context)
            content = self._extract_content(user_input, context)
            
            if not filepath:
                return {"error": "No filepath specified"}
            
            result = self.write_file(filepath, content)
            return {"success": True, "result": result}
        except Exception as e:
            self.logger.error(f"Writer agent failed: {e}")
            return {"error": str(e)}
    
    def write_file(self, filepath: str, content: str) -> str:
        # Create directory if it doesn't exist
        os.makedirs(os.path.dirname(filepath), exist_ok=True)
        
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(content)
        return f"File {filepath} written successfully"
    
    def _extract_filepath(self, user_input: str, context: dict) -> str:
        words = user_input.split()
        for word in words:
            if '/' in word or word.endswith(('.py', '.js', '.java', '.go', '.ts')):
                return word
        return context.get('filepath', '')
    
    def _extract_content(self, user_input: str, context: dict) -> str:
        return context.get('content', '# Generated by DevSage\n\n')